{"version":3,"sources":["styles/globalStyles.ts","components/LoadingScreen.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["GlobalStyles","createGlobalStyle","spin","keyframes","Screen","styled","div","Loader","LoadingScreen","Content","lazy","App","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LAqBeA,EAnBMC,YAAH,qZ,OCAZC,EAAOC,YAAH,sHASJC,EAASC,IAAOC,IAAV,qIAQCC,EAASF,IAAOC,IAAV,2JAKLJ,GAWCM,MARf,WACC,OACC,cAACJ,EAAD,UACC,cAACG,EAAD,OC3BGE,EAAUC,gBAAK,kBAAM,gCAaZC,MAXf,WACC,OACC,qCACC,cAAC,EAAD,IACA,cAAC,WAAD,CAAUC,SAAU,cAAC,EAAD,IAApB,SACC,cAACH,EAAD,UCIWI,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJdQ,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAMzBb,M","file":"static/js/main.e4d7f047.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyles = createGlobalStyle`\n  html {\n    box-sizing: border-box;\n    font-size: 62.5%;\n  }\n  *,\n  *::before,\n  *::after {\n    box-sizing: inherit;\n  }\n  body {\n    background-color: #000;\n    color: #fff;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    font-size: 1.6rem;\n    margin: 0;\n  }\n`;\n\nexport default GlobalStyles;\n","import styled, { keyframes } from 'styled-components';\n\nconst spin = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst Screen = styled.div`\n\theight: 100vh;\n\twidth: 100vw;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n`;\n\nexport const Loader = styled.div`\n\tborder-radius: 50%;\n\tborder-top: 0.3rem solid #fff;\n\theight: 5rem;\n\twidth: 5rem;\n\tanimation: ${spin} 1s linear infinite;\n`;\n\nfunction LoadingScreen() {\n\treturn (\n\t\t<Screen>\n\t\t\t<Loader />\n\t\t</Screen>\n\t);\n}\n\nexport default LoadingScreen;\n","import { lazy, Suspense } from 'react';\nimport GlobalStyles from './styles/globalStyles';\nimport LoadingScreen from './components/LoadingScreen';\nconst Content = lazy(() => import('./components/Content'));\n\nfunction App() {\n\treturn (\n\t\t<>\n\t\t\t<GlobalStyles />\n\t\t\t<Suspense fallback={<LoadingScreen />}>\n\t\t\t\t<Content />\n\t\t\t</Suspense>\n\t\t</>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}